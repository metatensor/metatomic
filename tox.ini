[tox]
min_version = 4.0
# these are the default environments, i.e. the list of tests running when you
# execute `tox` in the command-line without anything else
envlist =
    tests
    lint


[testenv]
package = external
package_env = build-equistore
lint_folders = "{toxinidir}/python" "{toxinidir}/setup.py"


[testenv:build-equistore]
# This environment is only used to build the wheels which are then re-used by
# all other environments requiring equistore to be installed
passenv =
    EQUISTORE_BUILD_TYPE
    RUST*
    CARGO*

deps =
    setuptools
    wheel
    cmake

commands =
    pip wheel . --no-build-isolation --no-deps --check-build-dependencies --wheel-dir {envtmpdir}/dist


[testenv:tests]
# this environement runs the tests of the equistore Python package
deps =
    pytest
    numpy
    torch

commands =
   # Run unit tests
    pytest {posargs}

    # Run documentation tests
    pytest --doctest-modules --pyargs equistore


[testenv:lint]
# this environement lints the Python code with flake8 (code linter), black (code
# formatter), and isort (sorting of imports)
package = skip
deps =
    flake8
    flake8-bugbear
    black
    blackdoc
    isort

commands =
    flake8 {[testenv]lint_folders}
    black --check --diff {[testenv]lint_folders}
    blackdoc --check --diff {[testenv]lint_folders}
    isort --check-only --diff {[testenv]lint_folders}


[testenv:format]
# this environement abuses tox to do actual formatting
#
# Users can run `tox -e format` to run formatting on all files
package = skip
deps =
    black
    blackdoc
    isort
commands =
    black {[testenv]lint_folders}
    blackdoc {[testenv]lint_folders}
    isort {[testenv]lint_folders}


[testenv:docs]
# this environement builds the documentation with sphinx
deps = -r docs/requirements.txt
allowlist_externals = bash
commands =
    sphinx-build {posargs:-E} -W -b html docs/src docs/build/html

    bash -c "cargo doc --no-deps --package equistore"
    bash -c "rm -rf docs/build/html/reference/rust/"
    bash -c "cp -r target/doc/ docs/build/html/reference/rust/"
    bash -c "cp docs/src/reference/rust/index.html docs/build/html/reference/rust/"


[testenv:check-python-build]
# this environement makes sure one can build sdist and wheels for Python
package = skip
deps =
    # build time dependencies
    setuptools
    wheel
    cmake
    # twine it a tool to check sdist and wheels metadata
    twine

allowlist_externals = bash
commands =
    # check building sdist and wheels from a checkout
    python setup.py sdist --dist-dir {envtmpdir}/dist
    python setup.py bdist_wheel --dist-dir {envtmpdir}/dist
    twine check {envtmpdir}/dist/*.tar.gz
    twine check {envtmpdir}/dist/*.whl

    # check building wheels from the sdist
    bash -c "python -m pip wheel --verbose {envtmpdir}/dist/equistore-*.tar.gz -w {envtmpdir}/dist/test"


[flake8]
max_line_length = 88
extend-ignore = E203
